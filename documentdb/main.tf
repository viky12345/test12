data "aws_subnets" "private" {

  tags = {
    #Tier = "privateApp"
    # Name = "sub-euw2-dev-dwp-feedback-vpc-privAp-*"
    Name = "sub-euw2-dev-privAp-*"
  }
}

data "aws_vpc" "cluster_vpc" {

  tags = {
    Name = "das-vpc"
    #  Name = "vpc-euw2-dev-dwp-feedback-vpc-0c1137f62f8db2995"
  }
}



# Create DocumentDB Subnet Group
resource "aws_docdb_subnet_group" "docdb_subnet" {
  name       = var.product_identifier
  # subnets         = module.vpc.private_subnets
  # subnets         = data.aws_subnets.private.ids  
  subnet_ids = data.aws_subnets.private.ids
}

# Generate password for master user
resource "random_password" "master_password" {
  length  = var.password_length
  special = false
}

# Generate master user
resource "random_password" "master_username" {
  length  = var.username_length
  special = false
  # number  = false
}

# Store master password generated by random_password in parameter store
resource "aws_ssm_parameter" "master_password" {
  name   = "/${var.ssm_environment}/${var.product_identifier}/db-password"
  type   = "SecureString"
  #key_id = var.kms_key_id
  value  = random_password.master_password.result
}

# Store master username in parameter store
resource "aws_ssm_parameter" "master_username" {
  name   = "/${var.ssm_environment}/${var.product_identifier}/db-username"
  type   = "SecureString"
  #key_id = var.kms_key_id
  value  = random_password.master_username.result
}

# Get kms Key arn
#data "aws_kms_key" "kms_arn" {
 # key_id = var.kms_key_id
#}

# Create DocumentDB cluster
resource "aws_docdb_cluster" "docdb_cluster" {
  cluster_identifier              = var.product_identifier
  db_subnet_group_name            = aws_docdb_subnet_group.docdb_subnet.name
  vpc_security_group_ids          = aws_security_group.docdb.*.id
  engine                          = var.engine
  engine_version                  = var.engine_version
  port                            = var.db_ingress_port
  master_username                 = aws_ssm_parameter.master_username.value
  master_password                 = aws_ssm_parameter.master_password.value
  storage_encrypted               = var.storage_encrypted
  apply_immediately               = var.apply_immediately
  #kms_key_id                      = data.aws_kms_key.kms_arn.arn
  #kms_key_id                      = "arn:aws:kms:eu-west-2:853876231797:key/5bc279fe-e35f-4bc5-bc0f-46e07b45f1a3"

  enabled_cloudwatch_logs_exports = var.cloudwatch_logs_to_export

  backup_retention_period   = var.backup_retention_period
  preferred_backup_window   = var.preferred_backup_window
  skip_final_snapshot       = var.skip_final_snapshot
  final_snapshot_identifier = "${var.product_identifier}-final"
  tags ={
  Name=var.product_identifier
  }

  depends_on = [aws_ssm_parameter.master_password, aws_ssm_parameter.master_username]
}

resource "aws_docdb_cluster_instance" "cluster_instances" {
  count = var.cluster_instance_count

  identifier         = "${var.product_identifier}-${count.index}"
  cluster_identifier = aws_docdb_cluster.docdb_cluster.id
  instance_class     = var.cluster_instance_class
  ca_cert_identifier = var.ca_cert_identifier
}
